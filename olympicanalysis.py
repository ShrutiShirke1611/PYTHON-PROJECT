# -*- coding: utf-8 -*-
"""OlympicAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a4ZQ2nHcE1b4DEgjNCL-EnJEGgEeLUv5

**OLYMPIC DATA ANALYSIS**

OBJECTIVE

This Python script analyzes athlete participation and performance in the Winter Olympics, covering key metrics and visualizations:

Country Participation: Shows the distribution of athletes by country, highlighting nations with the most representation.
Top Sports for Medals: Identifies the most popular sports for winning medals, helping to understand sport popularity.
Medal Distribution: Displays counts of Gold, Silver, and Bronze medals, providing an overview of total medal achievements.
Gender Representation: Analyzes male and female participation across each sport, offering insights into gender parity.
Gender-Based Medal Analysis: Examines medal counts by gender, showing comparative achievements in various sports. This script provides insights on athlete demographics, country representation, sport popularity, and gender achievements, supporting data-driven decisions in sports management and promoting gender equality.
"""

#importing all essential libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt # for charts
import seaborn as sns

try:
    df = pd.read_csv("/content/Athletes_winter_games.csv", encoding='ISO-8859-1')
except UnicodeDecodeError:
    print("Failed to read with ISO-8859-1. Trying cp1252...")
    df = pd.read_csv("/content/Athletes_winter_games.csv", encoding='cp1252')

print(df.head())

df.info() # Display basic information about the dataset

df.describe() # Provides summary of the stastics

df.head() # Display the first 5 rows of the DataFrame

df.tail() # Display the last 5 rows of the DataFrame

import matplotlib.pyplot as plt

# Chart 1: Pie Chart - Sum of Year by NOC
# Grouping data by 'NOC' and getting the count of athletes per country
noc_counts = df['NOC'].value_counts().head(15)  # Top 15 countries for clarity

plt.figure(figsize=(8, 8))
plt.pie(noc_counts, labels=noc_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Sum of Year by NOC')
plt.show()

# Chart 2: Bar Chart - Count of Medal by Sport
# We will filter for rows with a medal (Gold, Silver, or Bronze) and count them by sport.
# Filter data to only include entries with a medal
medals_data = df.dropna(subset=['Medal'])
medal_counts_by_sport = medals_data['Sport'].value_counts().head(15)  # Top 15 sports for clarity

plt.figure(figsize=(10, 6))
plt.barh(medal_counts_by_sport.index, medal_counts_by_sport.values, color='skyblue')
plt.xlabel('Count of Medal')
plt.title('Count of Medal by Sport')
plt.gca().invert_yaxis()
plt.show()

# Count of each medal type
medal_type_counts = medals_data['Medal'].value_counts()

plt.figure(figsize=(8, 5))
plt.bar(medal_type_counts.index, medal_type_counts.values, color=['gold', 'silver', '#cd7f32'])
plt.xlabel('Medal')
plt.ylabel('Count')
plt.title('Sum of Year by Medal')
plt.show()

# Pivot table for athlete counts by Sport and Gender
table_data = pd.pivot_table(df, values='Name', index='Sport', columns='Sex', aggfunc='count', fill_value=0)
table_data['Total'] = table_data.sum(axis=1)
table_data.loc['Total'] = table_data.sum()
table_data

# Count of medals by Sex
medal_counts_by_sex = medals_data['Sex'].value_counts()

plt.figure(figsize=(8, 8))
plt.pie(medal_counts_by_sex, labels=medal_counts_by_sex.index, autopct='%1.1f%%', startangle=140, wedgeprops=dict(width=0.3))
plt.title('Count of Medal by Sex')
plt.show()

"""**CONCLUSION**

In summary, the Olympic data analysis project provides a structured approach to understanding athlete participation, medal distribution, and gender representation in the Winter Olympics. By utilizing Python libraries such as pandas, numpy, matplotlib, seaborn, and plotly, we can efficiently load, clean, analyze, and visualize the data to draw meaningful insights.
"""